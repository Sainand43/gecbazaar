// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User { 
  user_id         Int      @id @default(autoincrement())
  name           String    @db.VarChar(100)
  email          String    @unique @db.VarChar(100)
  password       String    @db.VarChar(255)
  phone          String?   @db.VarChar(15)
  created_at     DateTime  @default(now())
  Products       Product[]
  Wishlist       Wishlist[]
}

model Product {
  product_id  Int      @id @default(autoincrement())
  seller_id   Int      
  title       String   @db.VarChar(255)
  description String?
  price       Decimal  @db.Decimal(10,2)
  image_url   String   @default("default_product.png") @db.VarChar(255)
  category    Category 
  status      ProductStatus @default(Available)
  created_at  DateTime @default(now())
  seller      User      @relation(fields: [seller_id], references: [user_id], onDelete: Cascade)
  Wishlist       Wishlist[]
}

enum ProductStatus {
  Available
  Sold
}

enum Category {
  Electronic
  Books
  EngineeringGraphics
  Boiler
  Other
}

model Wishlist {
  wishlist_id Int      @id @default(autoincrement())
  user_id     Int
  product_id  Int
  added_at    DateTime @default(now())
  user        User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  product     Product @relation(fields: [product_id], references: [product_id], onDelete: Cascade)
}